<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="932c975e-949e-412c-82ad-b924fde496c6" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/cloudbuild.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/cloudbuild.yaml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Python tests.Python tests for test_views.GameAPITestCase.executor": "Run",
    "Python tests.Python tests for test_views.GameAPITestCase.test_create_game.executor": "Run",
    "Python tests.Python tests for test_views.GameAPITestCase.test_create_player.executor": "Run",
    "Python tests.Python tests for test_views.GameAPITestCase.test_create_round_and_check_winner.executor": "Run",
    "Python tests.Python tests for test_views.GameAPITestCase.test_create_round_with_invalid_data.executor": "Run",
    "git-widget-placeholder": "feature/config__initial",
    "last_opened_file_path": "/home/joel/projects/pruebas_tecnicas/games/games",
    "node.js.selected.package.tslint": "(autodetect)",
    "settings.editor.selected.configurable": "com.intellij.python.django.customization.DjangoModulesConfigurable"
  }
}]]></component>
  <component name="RunManager" selected="Python tests.Python tests for test_views.GameAPITestCase">
    <configuration name="Python tests for test_views.GameAPITestCase" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="games" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/game/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_views.GameAPITestCase&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_views.GameAPITestCase.test_create_game" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="games" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/game/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_views.GameAPITestCase.test_create_game&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_views.GameAPITestCase.test_create_player" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="games" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/game/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_views.GameAPITestCase.test_create_player&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_views.GameAPITestCase.test_create_round_and_check_winner" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="games" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/game/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_views.GameAPITestCase.test_create_round_and_check_winner&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_views.GameAPITestCase.test_create_round_with_invalid_data" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="games" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/game/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_views.GameAPITestCase.test_create_round_with_invalid_data&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python tests.Python tests for test_views.GameAPITestCase" />
        <item itemvalue="Python tests.Python tests for test_views.GameAPITestCase.test_create_round_and_check_winner" />
        <item itemvalue="Python tests.Python tests for test_views.GameAPITestCase.test_create_game" />
        <item itemvalue="Python tests.Python tests for test_views.GameAPITestCase.test_create_player" />
        <item itemvalue="Python tests.Python tests for test_views.GameAPITestCase.test_create_round_with_invalid_data" />
      </list>
    </recent_temporary>
  </component>
  <component name="TaskManager">
    <servers />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/games$.coverage" NAME=" Coverage Results" MODIFIED="1742087858728" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/game/tests" />
  </component>
</project>